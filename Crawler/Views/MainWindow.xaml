<Window x:Class="Crawler.Views.MainWindow" x:Name="window"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:viewModels="clr-namespace:Crawler.ViewModels"
        mc:Ignorable="d"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="clr-namespace:Crawler.Controls"
        xmlns:enums="clr-namespace:Interfaces.Enums;assembly=Interfaces"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:behaviors="clr-namespace:Crawler.Behaviors"
        xmlns:system="clr-namespace:System;assembly=mscorlib"        
        Title="{Binding Version, Mode=OneTime}" Height="450" Width="1200"
        Icon="../Images/gear.ico"
        d:DataContext="{d:DesignInstance viewModels:MainWindowViewModel}"
        >
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding FillChannelsCommand, Mode=OneTime}" CommandParameter="{Binding ElementName=channelsGrid}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    
    <Grid>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="25" />
            <RowDefinition />
            <RowDefinition Height="25" />
        </Grid.RowDefinitions>
        
        <Menu>
            
            <Menu.ItemsPanel>
                <ItemsPanelTemplate>
                    <DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                </ItemsPanelTemplate>
            </Menu.ItemsPanel>

            <MenuItem Header="File">
                <MenuItem Header="Backup" Command="{Binding MainMenuCommand, Mode=OneTime}" CommandParameter="{x:Static enums:MainMenuItem.Backup}"/>
                <MenuItem Header="Restore" Command="{Binding MainMenuCommand, Mode=OneTime}" CommandParameter="{x:Static enums:MainMenuItem.Restore}"/>
                <Separator />
                <MenuItem Header="Exit" Command="{Binding MainMenuCommand, Mode=OneTime}" CommandParameter="{Binding ElementName=window}"/>
            </MenuItem>

            <MenuItem Header="Tools">
                <MenuItem Header="Settings" Command="{Binding MainMenuCommand, Mode=OneTime}" CommandParameter="{x:Static enums:MainMenuItem.Settings}"/>
                <MenuItem Header="Vacuum" Command="{Binding MainMenuCommand, Mode=OneTime}" CommandParameter="{x:Static enums:MainMenuItem.Vacuum}"/>
            </MenuItem>

            <MenuItem Header="Add Link"  Command="{Binding MainMenuCommand, Mode=OneTime}" CommandParameter="{x:Static enums:MainMenuItem.Link}"/>

            <MenuItem Header="Help" HorizontalAlignment="Right">
                <MenuItem Header="About" Command="{Binding MainMenuCommand, Mode=OneTime}" CommandParameter="{x:Static enums:MainMenuItem.About}"/>
            </MenuItem>
            
        </Menu>
        
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="150" Width="350" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            
            <Border Name="mask" Background="White" CornerRadius="30" />
            
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="48" />
                </Grid.RowDefinitions>

                <DockPanel Grid.Row="0" Background="Lavender" Margin="0,1,0,1">
                    <Border CornerRadius="4" BorderBrush="Gray" Background="Lavender" BorderThickness="1" DockPanel.Dock="Top">
                        <Expander ExpandDirection="Down" DockPanel.Dock="Left" FlowDirection="RightToLeft" MaxHeight="380">

                            <Expander.Content>
                                <DockPanel FlowDirection="LeftToRight" LastChildFill="True">
                                    <DataGrid CanUserAddRows="False" x:Name="relatedGrid"
                                              CanUserDeleteRows="False"
                                              AutoGenerateColumns="False"
                                              HeadersVisibility="None"
                                              GridLinesVisibility="Horizontal"
                                              BorderThickness="1"
                                              ItemsSource="{Binding RelatedChannels}"
                                              SelectedItem="{Binding SelectedChannel}"
                                              >
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged" SourceName="relatedGrid">
                                                <i:InvokeCommandAction Command="{Binding FillRelatedChannelCommand, Mode=OneTime}" CommandParameter="25"/>
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="MouseDoubleClick">
                                                <i:InvokeCommandAction Command="{Binding FillRelatedChannelCommand, Mode=OneTime}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        
                                        <DataGrid.Resources>
                                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Lavender" />
                                            <ContextMenu x:Key="DataRowContextMenu">
                                                <MenuItem Header="Subscribe" Command="{Binding DataContext.ChannelMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:ChannelMenuItem.Subscribe}" />
                                            </ContextMenu>
                                        </DataGrid.Resources>

                                        <DataGrid.CellStyle>
                                            <Style TargetType="DataGridCell">
                                                <Setter Property="BorderThickness" Value="0" />
                                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                            </Style>
                                        </DataGrid.CellStyle>

                                        <DataGrid.RowStyle>
                                            <Style TargetType="{x:Type DataGridRow}">
                                                <Setter Property="ContextMenu" Value="{StaticResource DataRowContextMenu}" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=IsDownloading, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                        <Setter Property="Background" Value="PaleGreen" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DataGrid.RowStyle>

                                        <DataGrid.Columns>
                                            <DataGridTemplateColumn CanUserResize="False">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel Margin="1">
                                                            <StackPanel.OpacityMask>
                                                                <VisualBrush Visual="{Binding ElementName=mask}" />
                                                            </StackPanel.OpacityMask>
                                                            <Image Source="{Binding Thumbnail, IsAsync=True, Mode=OneWay}"
                                                                    RenderOptions.BitmapScalingMode="Fant"
                                                                    ToolTipService.ShowDuration="120000"
                                                                    Stretch="Fill"
                                                                    Width="48"
                                                                    Height="48"
                                                                    VerticalAlignment="Top"
                                                                    Margin="0"
                                                                    HorizontalAlignment="Center">
                                                                <Image.ToolTip>
                                                                    <StackPanel Orientation="Horizontal">
                                                                        <Image Source="{Binding Thumbnail, IsAsync=True, Mode=OneWay}" />
                                                                        <TextBlock Margin="10,0,0,0" Text="{Binding SubTitle, Mode=OneWay}" TextWrapping="Wrap"/>
                                                                    </StackPanel>
                                                                </Image.ToolTip>
                                                            </Image>
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>

                                            <DataGridTemplateColumn CanUserResize="True" Width="*">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding Title, Mode=OneWay}" 
                                                                   Margin="10,0,5,0" Foreground="MidnightBlue" FontStretch="Normal" FontSize="22" VerticalAlignment="Center" 
                                                                   />
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>

                                        </DataGrid.Columns>

                                    </DataGrid>
                                </DockPanel>
                            </Expander.Content>

                            <Expander.Header>
                                <TextBlock FontSize="10" Text="{Binding RelatedChannels.Count, StringFormat=Related: {0}, Mode=OneWay}" IsEnabled="False"/>
                            </Expander.Header>

                        </Expander>
                    </Border>
                </DockPanel>

                <controls:CustomDataGrid Grid.Row="1" x:Name="channelsGrid"
                          CanUserAddRows="False"
                          CanUserDeleteRows="False"
                          AutoGenerateColumns="False"
                          HeadersVisibility="None"
                          GridLinesVisibility="Horizontal"
                          BorderThickness="1"
                          EnableColumnVirtualization="True"
                          EnableRowVirtualization="True"
                          HorizontalScrollBarVisibility="Disabled"
                          ItemsSource="{Binding Channels}"
                          SelectedItem="{Binding SelectedChannel}"
                          SelectedItemsList="{Binding SelectedChannels, Mode=OneWayToSource}"
                          SelectionUnit="FullRow"
                          SelectionMode="Extended"
                          IsSynchronizedWithCurrentItem="True"
                          >
                    <DataGrid.InputBindings>
                        <KeyBinding Key="Delete" Command="{Binding ChannelKeyDownCommand, Mode=OneTime}" CommandParameter="{x:Static enums:KeyboardKey.Delete}"/>
                        <KeyBinding Modifiers="Control" Key="Delete" Command="{Binding ChannelKeyDownCommand, Mode=OneTime}" CommandParameter="{x:Static enums:KeyboardKey.Delete}"/>
                    </DataGrid.InputBindings>
                    
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding ChannelGridFocusCommand, Mode=OneTime}" CommandParameter="{Binding ElementName=channelsGrid, Path=SelectedItem}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding ChannelSelectCommand, Mode=OneTime}" CommandParameter="{Binding ElementName=channelsGrid, Path=SelectedItem}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding ChannelDoubleClickCommand, Mode=OneTime}" CommandParameter="{Binding ElementName=channelsGrid, Path=SelectedItem}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <DataGrid.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Lavender" />
                        <ContextMenu x:Key="DataRowContextMenu">
                            <MenuItem Header="Delete" Command="{Binding DataContext.ChannelMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:ChannelMenuItem.Delete}" />
                            <MenuItem Header="Related" Command="{Binding DataContext.ChannelMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:ChannelMenuItem.Related}" />
                            <MenuItem Header="Edit" Command="{Binding DataContext.ChannelMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:ChannelMenuItem.Edit}" />
                            <MenuItem Header="Tags" Command="{Binding DataContext.ChannelMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:ChannelMenuItem.Tags}" />
                            <MenuItem Header="Update PL" Command="{Binding DataContext.ChannelMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:ChannelMenuItem.Update}" />
                        </ContextMenu>
                    </DataGrid.Resources>
                    
                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        </Style>
                    </DataGrid.CellStyle>
                    
                    <DataGrid.RowStyle>
                        <Style TargetType="{x:Type DataGridRow}">
                            <!--<Setter Property="IsSelected" Value="{Binding Path=IsSelected}"/>-->
                            <Setter Property="ContextMenu" Value="{StaticResource DataRowContextMenu}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsDownloading, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="Background" Value="PaleGreen" />
                                </DataTrigger>                    
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>

                    <DataGrid.Columns>
                        <DataGridTemplateColumn CanUserResize="False">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Margin="1">
                                        <StackPanel.OpacityMask>
                                            <VisualBrush Visual="{Binding ElementName=mask}" />
                                        </StackPanel.OpacityMask>
                                        <Image Source="{Binding Thumbnail, IsAsync=True, Mode=OneWay}" 
                                               RenderOptions.BitmapScalingMode="Fant"
                                               ToolTipService.ShowDuration="120000"
                                               Stretch="Fill"
                                               Width="48"
                                               Height="48"
                                               VerticalAlignment="Top"
                                               Margin="0"
                                               HorizontalAlignment="Center"
                                               >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="ToolTipOpening" >
                                                    <i:InvokeCommandAction Command="{Binding DataContext.FillDescriptionCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" 
                                                                           CommandParameter="{Binding}"
                                                                           />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                            
                                            <Image.ToolTip>
                                                <StackPanel Orientation="Horizontal">
                                                    <Image Source="{Binding Thumbnail, IsAsync=True, Mode=OneWay}" />
                                                    <TextBlock Margin="10,0,0,0" Text="{Binding SubTitle, Mode=OneWay}" TextWrapping="Wrap"/>
                                                </StackPanel>
                                            </Image.ToolTip>
                                        </Image>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn CanUserResize="True" Width="*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Title, Mode=OneWay}" Margin="10,0,5,0" Foreground="MidnightBlue" FontStretch="Normal" FontSize="22" VerticalAlignment="Center" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn CanUserResize="False" Width="50">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding CountNew, Mode=OneWay}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="21">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property= "Foreground" Value="MediumSeaGreen" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding CountNew}" Value="0">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        
                    </DataGrid.Columns>

                </controls:CustomDataGrid>
                
                <DockPanel Grid.Row="2" Background="Lavender" Margin="0">
                    <Border CornerRadius="4" BorderBrush="Gray" Background="Lavender" BorderThickness="1" DockPanel.Dock="Top">
                        <Expander ExpandDirection="Up" DockPanel.Dock="Left" FlowDirection="RightToLeft" 
                                  IsExpanded="{Binding IsSearchExpanded, Mode=OneWayToSource}"
                                  >
                            
                            <Expander.Header>
                                <Grid HorizontalAlignment="{Binding Path=HorizontalAlignment, RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}, Mode=OneWayToSource}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Grid.Column="2" FlowDirection="LeftToRight" 
                                             Width="102" HorizontalAlignment="Left" BorderBrush="Lavender"
                                             Text="{Binding FilterChannelKey, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
                                             VerticalContentAlignment="Center"
                                             >
                                        <TextBox.Resources>
                                            <VisualBrush x:Key="HelpBrush" TileMode="None" Opacity="0.4" Stretch="None" AlignmentX="Left" AlignmentY="Bottom">
                                                <VisualBrush.Visual>
                                                    <TextBlock FontStyle="Normal" Text="Filter" FontSize="16"/>
                                                </VisualBrush.Visual>
                                                <VisualBrush.Transform>
                                                    <ScaleTransform CenterX="20" CenterY="-5" ScaleX="0.8" ScaleY="0.8"/>
                                                </VisualBrush.Transform>
                                            </VisualBrush>
                                        </TextBox.Resources>
                                        <TextBox.Style>
                                            <Style TargetType="TextBox">
                                                <Style.Triggers>
                                                    <Trigger Property="Text" Value="{x:Null}">
                                                        <Setter Property="Background" Value="{StaticResource HelpBrush}" />
                                                    </Trigger>
                                                    <Trigger Property="Text" Value="">
                                                        <Setter Property="Background" Value="{StaticResource HelpBrush}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                    <Label Grid.Column="0" FontSize="10" Content="Search"/>
                                </Grid>
                            </Expander.Header>
                            
                            <Expander.Content>
                                <DockPanel FlowDirection="LeftToRight" LastChildFill="True">
                                    <DataGrid CanUserAddRows="False" x:Name="popGrid"
                                              CanUserDeleteRows="False"
                                              AutoGenerateColumns="False"
                                              HeadersVisibility="None"
                                              GridLinesVisibility="Horizontal"
                                              BorderThickness="1"
                                              ItemsSource="{Binding ServiceChannels}"
                                              SelectedItem="{Binding SelectedChannel}"
                                              >
                                        <DataGrid.InputBindings>
                                            <KeyBinding Key="Enter" Command="{Binding ChannelKeyDownCommand, Mode=OneTime}" CommandParameter="{x:Static enums:KeyboardKey.Enter}"/>
                                        </DataGrid.InputBindings>

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseDoubleClick">
                                                <i:InvokeCommandAction Command="{Binding ServiceChannel.FillPopularCommand, Mode=OneTime}" />
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                                <i:InvokeCommandAction Command="{Binding PopularSelectCommand}" CommandParameter="{Binding ElementName=popGrid, Path=SelectedItem}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        
                                        <DataGrid.Resources>
                                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Lavender" />
                                    </DataGrid.Resources>

                                        <DataGrid.CellStyle>
                                            <Style TargetType="DataGridCell">
                                                <Setter Property="BorderThickness" Value="0" />
                                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                            </Style>
                                        </DataGrid.CellStyle>

                                        <DataGrid.Columns>
                                            <DataGridTemplateColumn CanUserResize="False" d:DataContext="{d:DesignInstance viewModels:ServiceChannelViewModel}">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <ComboBox ItemsSource="{Binding SupportedSites, Mode=OneWay}"
                                                                  SelectedItem="{Binding SelectedSite, Mode=OneWay}"
                                                                  Margin="0.5"
                                                                  >

                                                            <i:Interaction.Triggers>
                                                                <i:EventTrigger EventName="SelectionChanged">
                                                                    <i:InvokeCommandAction Command="{Binding SiteChangedCommand, Mode=OneTime}" />
                                                                </i:EventTrigger>
                                                            </i:Interaction.Triggers>

                                                            <ComboBox.Resources>
                                                                <system:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">0</system:Double>
                                                            </ComboBox.Resources>
                                                            
                                                            <ComboBox.ItemTemplate>
                                                                <DataTemplate>
                                                                    <StackPanel Margin="0.5">
                                                                        <StackPanel.OpacityMask>
                                                                            <VisualBrush Visual="{Binding ElementName=mask}" />
                                                                        </StackPanel.OpacityMask>
                                                                        <Image Source="{Binding Thumbnail, IsAsync=True, Mode=OneWay}"
                                                                               RenderOptions.BitmapScalingMode="Fant"
                                                                               ToolTipService.ShowDuration="120000"
                                                                               Stretch="Fill"
                                                                               Width="45"
                                                                               Height="45"
                                                                               VerticalAlignment="Top"
                                                                               Margin="0"
                                                                               HorizontalAlignment="Center" 
                                                                               />
                                                                    </StackPanel>
                                                                </DataTemplate>
                                                            </ComboBox.ItemTemplate>
                                                            
                                                        </ComboBox>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>

                                            <DataGridTemplateColumn CanUserResize="True" Width="*">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition />
                                                            <ColumnDefinition />
                                                        </Grid.ColumnDefinitions>
                                                            <StackPanel Width="Auto" Orientation="Horizontal">
                                                                <TextBox Width="75" Height="25" Margin="10,0,1,0" behaviors:FocusExtension.IsFocused="{Binding DataContext.IsSearchExpanded, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                                                         VerticalContentAlignment="Bottom" 
                                                                         Text="{Binding DataContext.ServiceChannel.SearchKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
                                                                    <TextBox.Resources>
                                                                        <VisualBrush x:Key="HelpBrush" TileMode="None" Opacity="0.4" Stretch="None" AlignmentX="Left" AlignmentY="Bottom">
                                                                            <VisualBrush.Visual>
                                                                                <TextBlock FontStyle="Normal" Text="#Search" FontSize="13" />
                                                                            </VisualBrush.Visual>
                                                                            <VisualBrush.Transform>
                                                                                <ScaleTransform CenterX="100" ScaleX="0.99" ScaleY="0.89"/>
                                                                            </VisualBrush.Transform>
                                                                        </VisualBrush>
                                                                    </TextBox.Resources>
                                                                    <TextBox.Style>
                                                                        <Style TargetType="TextBox">
                                                                            <Style.Triggers>
                                                                                <Trigger Property="Text" Value="{x:Null}">
                                                                                    <Setter Property="Background" Value="{StaticResource HelpBrush}" />
                                                                                </Trigger>
                                                                                <Trigger Property="Text" Value="">
                                                                                    <Setter Property="Background" Value="{StaticResource HelpBrush}" />
                                                                                </Trigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </TextBox.Style>
                                                                </TextBox>
                                                                <Button Width="25" Height="25" Content="OK" Command="{Binding DataContext.ServiceChannel.SearchCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                                                            </StackPanel>
                                                            <TextBlock Grid.Column="1" Text="{Binding Title, Mode=OneTime}" Margin="10,0,5,0" Foreground="MidnightBlue" FontStretch="Normal" FontSize="22" VerticalAlignment="Center"/>
                                                        </Grid>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>

                                        <DataGridTemplateColumn CanUserResize="False" Width="60">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <ComboBox FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="MediumSeaGreen" Width="55" Margin="0,0,5,0"
                                                              ItemsSource="{Binding Path=DataContext.ServiceChannel.Countries, Mode=OneTime, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                                              SelectedItem="{Binding Path=DataContext.ServiceChannel.SelectedCountry, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                                    />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>

                                    </DataGrid.Columns>
                                    
                                </DataGrid>
                                </DockPanel>
                            </Expander.Content>
                            
                        </Expander>
                    </Border>
                </DockPanel>

                <DockPanel Grid.Row="3" Background="Gainsboro" IsEnabled="{Binding IsWorking, Mode=OneWay, Converter={StaticResource InvertBooleanConverter}}">
                    <Border CornerRadius="4" BorderBrush="Gray" Background="Lavender" BorderThickness="1" DockPanel.Dock="Top">
                        <DockPanel LastChildFill="True">
                            <Button Width="50" Margin="1,2,2,2" Command="{Binding SyncDataCommand, Mode=OneTime}">
                                <Image Source="../Images/sync-48.png" StretchDirection="Both" />
                                <Button.ToolTip>
                                    <TextBlock Text="Sync" />
                                </Button.ToolTip>
                            </Button>
                            <Button Width="50" Margin="0,2,2,2" Command="{Binding AddNewItemCommand, Mode=OneTime}">
                                <Image Source="../Images/add-48.png" StretchDirection="Both" />
                                <Button.ToolTip>
                                    <TextBlock Text="Add" />
                                </Button.ToolTip>
                            </Button>
                            <ComboBox ItemsSource="{Binding CurrentTags, Mode=OneWay}"
                                      Margin="0,2,2,2" 
                                      VerticalContentAlignment="Center"
                                      SelectedItem="{Binding Path=DataContext.SelectedTag, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                      >
                                
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="DropDownOpened">
                                        <i:InvokeCommandAction Command="{Binding TagsDropDownOpenedCommand, Mode=OneTime}" />
                                    </i:EventTrigger>                                
                                </i:Interaction.Triggers>
                                
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox IsChecked="{Binding IsChecked}" Margin="1"
                                                      >
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Checked">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.CurrentTagCheckedCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}, Mode=OneTime}" />
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="Unchecked">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.CurrentTagCheckedCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}, Mode=OneTime}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                                <CheckBox.LayoutTransform>
                                                    <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                                                </CheckBox.LayoutTransform>
                                                <CheckBox.Style>
                                                    <Style TargetType="CheckBox">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ElementName=tagTextBox, Path=Text}" Value="">
                                                                <Setter Property="Visibility" Value="Hidden"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </CheckBox.Style>
                                            </CheckBox>
                                            <TextBlock Text="{Binding Title}" FontSize="16" Margin="5,0,0,0" x:Name="tagTextBox">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <Trigger Property="Text" Value="">
                                                                <Setter Property="Visibility" Value="Hidden" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </StackPanel>
                                    </DataTemplate>
                             </ComboBox.ItemTemplate>
                            </ComboBox>
                        </DockPanel>
                    </Border>
                </DockPanel>

            </Grid>

            <GridSplitter Grid.Column="1" Grid.RowSpan="2" Width="3" VerticalAlignment="Stretch" HorizontalAlignment="Center" BorderThickness="0.2" BorderBrush="Gray" />

            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <!--<RowDefinition Height="Auto" />-->
                    <RowDefinition MinHeight="25" Height="Auto"/>
                </Grid.RowDefinitions>

                <controls:BusyDecorator IsBusyIndicatorShowing="{Binding IsWorking}">
                    <DataGrid x:Name="videoGrid" 
                              CanUserAddRows="False"
                              CanUserDeleteRows="False"
                              AutoGenerateColumns="False"
                              HeadersVisibility="Column"
                              RowHeaderWidth="0"
                              GridLinesVisibility="Horizontal"
                              BorderThickness="1"
                              ItemsSource="{Binding SelectedChannel.ChannelItems}"
                              SelectedItem="{Binding SelectedChannel.SelectedItem}"                          
                              Sorting="VideoGrid_OnSorting"
                              EnableColumnVirtualization="True"
                              EnableRowVirtualization="True"
                              SelectionMode="Extended"
                              >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding VideoDoubleClickCommand, Mode=OneTime}" CommandParameter="{Binding ElementName=videoGrid, Path=SelectedItem}"/>
                            </i:EventTrigger>
                            <behaviors:RoutedEventTrigger RoutedEvent="ScrollViewer.ScrollChanged">
                                <i:InvokeCommandAction Command="{Binding DataContext.ScrollChangedCommand, Mode=OneTime, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" CommandParameter="{Binding ElementName=videoGrid}"/>
                            </behaviors:RoutedEventTrigger>
                        </i:Interaction.Triggers>

                        <DataGrid.Resources>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Lavender" />
                            <ContextMenu x:Key="DataRowContextMenu">
                                <MenuItem Header="Delete" Command="{Binding DataContext.VideoItemMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:VideoMenuItem.Delete}" />
                                <MenuItem Header="Copy Link" Command="{Binding DataContext.VideoItemMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:VideoMenuItem.Link}" />
                                <MenuItem Header="Edit" Command="{Binding DataContext.OpenDescriptionCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{Binding}"/>
                                <MenuItem Header="Download HD" Command="{Binding DataContext.VideoItemMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" 
                                          CommandParameter="{x:Static enums:VideoMenuItem.HD}" 
                                          Visibility="{Binding Site, Converter={StaticResource SiteTypeToVisibilityConverter}}"
                                          />
                                <MenuItem Header="Download Audio" Command="{Binding DataContext.VideoItemMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" 
                                          CommandParameter="{x:Static enums:VideoMenuItem.Audio}" 
                                          Visibility="{Binding Site, Converter={StaticResource SiteTypeToVisibilityConverter}}"
                                          />
                                <MenuItem Header="Subscribe" Command="{Binding DataContext.VideoItemMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" 
                                          CommandParameter="{x:Static enums:VideoMenuItem.Subscribe}" 
                                          Visibility="{Binding Site, Converter={StaticResource SiteTypeToVisibilityConverter}}"
                                          />
                                <MenuItem Header="Subtitles" StaysOpenOnClick="True" Visibility="{Binding Site, Converter={StaticResource SiteTypeToVisibilityConverter}}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SubmenuOpened">
                                            <i:InvokeCommandAction Command="{Binding DataContext.FillSubitlesCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{Binding}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>

                                    <ListView ItemsSource="{Binding Path=DataContext.SelectedChannel.SelectedItem.Subtitles, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                          BorderThickness="0" Background="WhiteSmoke"
                                              >
                                        <ListView.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <CheckBox IsChecked="{Binding IsChecked}" Margin="0,1,0,0" />
                                                    <TextBlock Text="{Binding Language}" IsEnabled="{Binding IsEnabled}" Margin="10,0,10,0" />
                                                </StackPanel>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                    </ListView>
                                </MenuItem>

                            </ContextMenu>
                        </DataGrid.Resources>

                        <DataGrid.RowStyle>
                            <Style TargetType="{x:Type DataGridRow}">
                                <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=OneWayToSource}"/>
                                <Setter Property="ContextMenu" Value="{StaticResource DataRowContextMenu}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsNewItem}" Value="True">
                                        <Setter Property="Background" Value="PaleGreen" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>

                        <DataGrid.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            </Style>
                        </DataGrid.CellStyle>

                        <DataGrid.Columns>

                            <DataGridTemplateColumn CanUserResize="False" SortMemberPath="ViewCount">
                                <DataGridTemplateColumn.HeaderStyle>
                                    <Style TargetType="DataGridColumnHeader">
                                        <Setter Property="ToolTip" Value="Most Viewed" />
                                    </Style>
                                </DataGridTemplateColumn.HeaderStyle>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Margin="1">
                                            <StackPanel.OpacityMask>
                                                <VisualBrush Visual="{Binding ElementName=mask}" />
                                            </StackPanel.OpacityMask>
                                            <Image Source="{Binding Thumbnail, IsAsync=True, Mode=OneWay}" 
                                                   ToolTipService.ShowDuration="120000"
                                                   RenderOptions.BitmapScalingMode="Fant"
                                                   Stretch="Fill"
                                                   Width="48"
                                                   Height="48"
                                                   VerticalAlignment="Top"
                                                   Margin="0"
                                                   HorizontalAlignment="Center"
                                                   >
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="MouseLeftButtonUp" >
                                                        <i:InvokeCommandAction Command="{Binding DataContext.OpenDescriptionCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{Binding}" />
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="ToolTipOpening" >
                                                        <i:InvokeCommandAction Command="{Binding DataContext.FillDescriptionCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{Binding}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>

                                                <Image.ToolTip>
                                                    <StackPanel Orientation="Horizontal">
                                                        <Image Source="{Binding Thumbnail, IsAsync=True, Mode=OneWay}" />
                                                        <TextBlock Margin="10,0,0,0" Text="{Binding Description, Mode=OneWay}" TextWrapping="Wrap"/>
                                                    </StackPanel>
                                                </Image.ToolTip>
                                            </Image>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn CanUserResize="True" Width="*" Header="Title" SortMemberPath="Title">
                                <DataGridTemplateColumn.HeaderStyle>
                                    <Style TargetType="DataGridColumnHeader">
                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    </Style>
                                </DataGridTemplateColumn.HeaderStyle>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <TextBlock Text="{Binding Title}" Margin="10,0,5,0" Foreground="MidnightBlue" FontStretch="Normal" FontSize="22" VerticalAlignment="Center">
                                                <TextBlock.ToolTip>
                                                    <TextBlock Text="{Binding Title}"/>
                                                </TextBlock.ToolTip>
                                            </TextBlock>
                                            <StackPanel Grid.Row="1" Orientation="Horizontal">

                                                <TextBlock Text="{Binding DurationString}" Margin="10,0,0,0" Foreground="MidnightBlue" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="12"/>

                                                <TextBlock Text="{Binding DateTimeAgo}" Margin="10,0,0,0" Foreground="MidnightBlue" HorizontalAlignment="Right" VerticalAlignment="Center" FontSize="12">
                                                    <TextBlock.ToolTip>
                                                        <TextBlock Text="{Binding Timestamp, StringFormat={}{0:dd.MM.yyyy HH:mm}}" Margin="10,0,0,0" Foreground="MidnightBlue" HorizontalAlignment="Right" VerticalAlignment="Center" FontSize="12"/>
                                                    </TextBlock.ToolTip>
                                            </TextBlock>

                                                <TextBlock Text="{Binding ViewCount}" Margin="10,0,0,0" Foreground="MidnightBlue" HorizontalAlignment="Right" VerticalAlignment="Center" FontSize="12" />

                                            </StackPanel>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn CanUserResize="False" Width="50" SortMemberPath="IsHasLocalFile">
                                <DataGridTemplateColumn.HeaderStyle>
                                    <Style TargetType="DataGridColumnHeader">
                                        <Setter Property="ToolTip" Value="Local File" />
                                    </Style>
                                </DataGridTemplateColumn.HeaderStyle>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Margin="0,0,2,0"
                                                Command="{Binding DataContext.VideoClickCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                                CommandParameter="{Binding ElementName=videoGrid, Path=SelectedItem}"
                                                >
                                            <Button.Template>
                                                <ControlTemplate>
                                                    <StackPanel Orientation="Vertical">
                                                        <Image>
                                                            <Image.Style>
                                                                <Style TargetType="{x:Type Image}">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding State}" Value="{x:Static enums:ItemState.LocalNo}">
                                                                            <Setter Property="Source" Value="../Images/add_64.png"/>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding State}" Value="{x:Static enums:ItemState.LocalYes}">
                                                                            <Setter Property="Source" Value="../Images/tick_64.png"/>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding State}" Value="{x:Static enums:ItemState.Downloading}">
                                                                            <Setter Property="Height" Value="32"/>
                                                                            <Setter Property="Source" Value="../Images/inbox-32.png"></Setter>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Image.Style>
                                                        </Image>
                                                        <ProgressBar Value="{Binding DownloadPercentage, Mode=OneWay}">
                                                            <ProgressBar.Style>
                                                                <Style TargetType="{x:Type ProgressBar}">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding State}" Value="{x:Static enums:ItemState.LocalNo}">
                                                                            <Setter Property="Height" Value="0"/>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding State}" Value="{x:Static enums:ItemState.LocalYes}">
                                                                            <Setter Property="Height" Value="0"/>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding State}" Value="{x:Static enums:ItemState.Downloading}">
                                                                            <Setter Property="Height" Value="16"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </ProgressBar.Style>
                                                        </ProgressBar>
                                                    </StackPanel>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </controls:BusyDecorator>          

                <Border Grid.Row="1" CornerRadius="4" BorderBrush="Gray" BorderThickness="1" Background="Lavender" DockPanel.Dock="Top" Margin="0,1,0,0">
                    
                    <Expander  ExpandDirection="Up" 
                               FlowDirection="RightToLeft" 
                               Background="Lavender" 
                               BorderThickness="1"
                               IsExpanded="{Binding IsExpand}"
                               >
                        <Expander.Content>
                            <Grid FlowDirection="LeftToRight">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="50" />
                                </Grid.ColumnDefinitions>

                                <ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Visible" Height="150" >
                                    <TextBox Text="{Binding SelectedChannel.SelectedItem.LogText, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                </ScrollViewer>

                                <TextBox Grid.Column="1" BorderBrush="Lavender" Width="Auto" Height="24" Margin="1,0,1,0"
                                         Text="{Binding SelectedChannel.FilterVideoKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                         VerticalAlignment="Bottom" 
                                         VerticalContentAlignment="Center"
                                         >
                                    <TextBox.Resources>
                                        <VisualBrush x:Key="HelpBrush" TileMode="None" Opacity="0.4" Stretch="None" AlignmentX="Left" AlignmentY="Bottom">
                                            <VisualBrush.Visual>
                                                <TextBlock FontStyle="Normal" Text="Filter" FontSize="13" />
                                            </VisualBrush.Visual>
                                            <VisualBrush.Transform>
                                                <ScaleTransform CenterX="500" ScaleX="0.99" ScaleY="0.89"/>
                                            </VisualBrush.Transform>
                                        </VisualBrush>
                                    </TextBox.Resources>
                                    <TextBox.Style>
                                        <Style TargetType="TextBox">
                                            <Style.Triggers>
                                                <Trigger Property="Text" Value="{x:Null}">
                                                    <Setter Property="Background" Value="{StaticResource HelpBrush}" />
                                                </Trigger>
                                                <Trigger Property="Text" Value="">
                                                    <Setter Property="Background" Value="{StaticResource HelpBrush}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>

                            </Grid>
                        </Expander.Content>
                    
                        <Expander.Header>
                        <StackPanel>
                            <Label FontSize="10" Content="Log"/>
                        </StackPanel>
                    </Expander.Header>
                    </Expander>
                    
                </Border>
                
            </Grid>

            <Expander Grid.Column="3" 
                      ExpandDirection="Left" 
                      HorizontalAlignment="Right" 
                      Background="Lavender"
                      BorderThickness="1" 
                      BorderBrush="Gray" 
                      Margin="0,0,2,0"                    
                      >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Expanded">
                        <i:InvokeCommandAction Command="{Binding PlaylistExpandCommand, Mode=OneTime}" CommandParameter="{Binding ElementName=channelsGrid, Path=SelectedItem}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Expander.Content>
                    <Grid Expander.Collapsed="GridCollapsed" Expander.Expanded="GridExpanded">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        
                        <GridSplitter Width="3"/>
                        
                        <DataGrid Grid.Column="1" x:Name="plGrid"
                                  CanUserAddRows="False"
                                  CanUserDeleteRows="False"
                                  AutoGenerateColumns="False"
                                  ItemsSource="{Binding SelectedChannel.ChannelPlaylists}"
                                  HeadersVisibility="None"
                                  GridLinesVisibility="Horizontal"
                                  BorderThickness="1"
                                  SelectedItem="{Binding SelectedPlaylist}"
                                  MinWidth="400"
                                  >

                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged" SourceName="plGrid">
                                    <i:InvokeCommandAction Command="{Binding PlaylistSelectCommand, Mode=OneTime}" CommandParameter="{Binding ElementName=plGrid, Path=SelectedItem}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="MouseDoubleClick">
                                    <i:InvokeCommandAction Command="{Binding PlaylistDoubleClickCommand, Mode=OneTime}" CommandParameter="{Binding ElementName=plGrid, Path=SelectedItem}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            

                            <DataGrid.Resources>
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Lavender" />
                                <ContextMenu x:Key="DataRowContextMenu">
                                    <MenuItem Header="Copy Link" Command="{Binding DataContext.PlaylistMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:PlaylistMenuItem.Link}" />
                                    <MenuItem Header="Download" Command="{Binding DataContext.PlaylistMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:PlaylistMenuItem.Download}" />
                                </ContextMenu>
                            </DataGrid.Resources>
                            
                            <DataGrid.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                </Style>
                            </DataGrid.CellStyle>
                            
                            <DataGrid.RowStyle>
                                <Style TargetType="{x:Type DataGridRow}">
                                    <Setter Property="ContextMenu" Value="{StaticResource DataRowContextMenu}" />
                                </Style>
                            </DataGrid.RowStyle>

                            <DataGrid.Columns>
                                
                                <DataGridTemplateColumn CanUserResize="False">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Margin="1">
                                                <StackPanel.OpacityMask>
                                                    <VisualBrush Visual="{Binding ElementName=mask}" />
                                                </StackPanel.OpacityMask>
                                                <Image Source="{Binding Thumbnail, IsAsync=True, Mode=OneWay}"
                                                        RenderOptions.BitmapScalingMode="Fant"
                                                        ToolTipService.ShowDuration="120000"
                                                        Stretch="Fill"
                                                        Width="48"
                                                        Height="48"
                                                        VerticalAlignment="Top"
                                                        Margin="0"
                                                        HorizontalAlignment="Center">
                                                    <Image.ToolTip>
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="{Binding Thumbnail, IsAsync=True, Mode=OneWay}" />
                                                            <TextBlock Margin="10,0,0,0" Text="{Binding SubTitle, Mode=OneWay}" />
                                                        </StackPanel>
                                                    </Image.ToolTip>
                                                </Image>
                                            </StackPanel>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Title}" Margin="10,0,5,0" Foreground="MidnightBlue" FontStretch="Normal" FontSize="22" VerticalAlignment="Center" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                            </DataGrid.Columns>
                            
                        </DataGrid>
                        
                    </Grid>
                </Expander.Content>
                <Expander.Header>
                    <StackPanel Orientation="Vertical">
                        <TextBlock Text="P" HorizontalAlignment="Center"/>
                        <TextBlock Text="L" HorizontalAlignment="Center"/>
                        <TextBlock Text="A" HorizontalAlignment="Center"/>
                        <TextBlock Text="Y" HorizontalAlignment="Center"/>
                        <TextBlock Text="L" HorizontalAlignment="Center"/>
                        <TextBlock Text="I" HorizontalAlignment="Center"/>
                        <TextBlock Text="S" HorizontalAlignment="Center"/>
                        <TextBlock Text="T" HorizontalAlignment="Center"/>
                        <TextBlock Text="S" HorizontalAlignment="Center"/>
                        <TextBlock Text=". ." HorizontalAlignment="Center"/>
                        <TextBlock Text="{Binding SelectedChannel.PlaylistCount, Mode=OneWay}" HorizontalAlignment="Center"/>
                    </StackPanel>
                </Expander.Header>
            </Expander>
            
        </Grid>

        <StatusBar Grid.Row="2">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="102" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="40" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="100" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem HorizontalContentAlignment="Center">
                <TextBlock Text="{Binding Result, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
            </StatusBarItem>
            <Separator Grid.Column="1" />
            <StatusBarItem Grid.Column="2">
                <TextBlock Text="{Binding Info, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
            </StatusBarItem>
            <!--<Separator Grid.Column="3" />-->
            <StatusBarItem Grid.Column="4" Content="{Binding SelectedChannel.ChannelItemsCount, Mode=OneWay}" HorizontalContentAlignment="Right" />
            <Separator Grid.Column="5" />
            <StatusBarItem Grid.Column="6">
                <ProgressBar Width="90" Height="16" Value="{Binding PrValue, Mode=OneWay}"/>
            </StatusBarItem>
        </StatusBar>
        
    </Grid>

</Window>