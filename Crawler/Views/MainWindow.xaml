<Window x:Class="Crawler.Views.MainWindow" x:Name="window"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:viewModels="clr-namespace:Crawler.ViewModels"
        mc:Ignorable="d"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="clr-namespace:Crawler.Controls"
        xmlns:enums="clr-namespace:Interfaces.Enums;assembly=Interfaces"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:behaviors="clr-namespace:Crawler.Behaviors"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:models="clr-namespace:Interfaces.Models;assembly=Interfaces"
        xmlns:common="clr-namespace:Crawler.Common"
        Title="{Binding Version, Mode=OneTime}" Height="450" Width="1200"
        Icon="../Images/gear.ico"
        d:DataContext="{d:DesignInstance viewModels:MainWindowViewModel, IsDesignTimeCreatable=False}"
        >
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding FillChannelsCommand, Mode=OneTime}" CommandParameter="{Binding ElementName=channelsGrid}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    
    <Window.Resources>
        <ItemsPanelTemplate x:Key="MenuItemPanelTemplate">
            <StackPanel Margin="-15,0,-30,0" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        </ItemsPanelTemplate>
        <ItemsPanelTemplate x:Key="ContextItemPanelTemplate">
            <StackPanel Margin="-15,0,0,0" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        </ItemsPanelTemplate>
        <Style TargetType="{x:Type ContextMenu}">
            <Setter Property="ItemsPanel" Value="{StaticResource ContextItemPanelTemplate}"/>
        </Style>
        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="ItemsPanel" Value="{StaticResource MenuItemPanelTemplate}"/>
        </Style>
        <Style TargetType="DataGridCell">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        </Style>
    </Window.Resources>
    
    <Grid>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="25" />
            <RowDefinition />
            <RowDefinition Height="25" />
        </Grid.RowDefinitions>
        
        <Menu>
            
            <Menu.ItemsPanel>
                <ItemsPanelTemplate>
                    <DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                </ItemsPanelTemplate>
            </Menu.ItemsPanel>

            <MenuItem Header="File">
                <MenuItem Header="Backup" Command="{Binding MainMenuCommand, Mode=OneTime}" CommandParameter="{x:Static enums:MainMenuItem.Backup}"/>
                <MenuItem Header="Restore" Command="{Binding MainMenuCommand, Mode=OneTime}" CommandParameter="{x:Static enums:MainMenuItem.Restore}"/>
                <Separator />
                <MenuItem Header="Exit" Command="{Binding MainMenuCommand, Mode=OneTime}" CommandParameter="{Binding ElementName=window}"/>
            </MenuItem>

            <MenuItem Header="Tools">
                <MenuItem Header="Settings" Command="{Binding MainMenuCommand, Mode=OneTime}" CommandParameter="{x:Static enums:MainMenuItem.Settings}"/>
                <MenuItem Header="Synchronize" Command="{Binding MainMenuCommand, Mode=OneTime}" CommandParameter="{x:Static enums:MainMenuItem.Sync}"/>
                <MenuItem Header="Update Statistics" Command="{Binding MainMenuCommand, Mode=OneTime}" CommandParameter="{x:Static enums:MainMenuItem.SyncStat}"/>
                <MenuItem Header="Vacuum" Command="{Binding MainMenuCommand, Mode=OneTime}" CommandParameter="{x:Static enums:MainMenuItem.Vacuum}"/>
            </MenuItem>

            <MenuItem Header="Add Link"  Command="{Binding MainMenuCommand, Mode=OneTime}" CommandParameter="{x:Static enums:MainMenuItem.Link}"/>

            <MenuItem Header="Help" HorizontalAlignment="Right">
                <MenuItem Header="About" Command="{Binding MainMenuCommand, Mode=OneTime}" CommandParameter="{x:Static enums:MainMenuItem.About}"/>
            </MenuItem>
            
        </Menu>
        
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="150" Width="350" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            
            <Border Name="mask" Background="White" CornerRadius="30" />
            
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="48" />
                </Grid.RowDefinitions>

                <DockPanel Grid.Row="0" Background="Lavender" Margin="0,1,0,1">
                    <Border CornerRadius="4" BorderBrush="Gray" Background="Lavender" BorderThickness="1" DockPanel.Dock="Top">
                        <Expander ExpandDirection="Down" DockPanel.Dock="Left" FlowDirection="RightToLeft">

                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Expanded">
                                    <i:InvokeCommandAction Command="{Binding PlaylistExpandCommand, Mode=OneTime}" CommandParameter="{Binding ElementName=stateGrid, Path=SelectedItem}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                            <Expander.Content>
                                <DockPanel FlowDirection="LeftToRight" LastChildFill="True">
                                    <DataGrid CanUserAddRows="False" x:Name="stateGrid"
                                              CanUserDeleteRows="False"
                                              AutoGenerateColumns="False"
                                              HeadersVisibility="None"
                                              GridLinesVisibility="Horizontal"
                                              BorderThickness="1"
                                              ItemsSource="{Binding RelatedChannels}"
                                              SelectedItem="{Binding SelectedChannel}"
                                              IsSynchronizedWithCurrentItem="True"
                                              >

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseDoubleClick">
                                                <i:InvokeCommandAction Command="{Binding FillRelatedChannelCommand, Mode=OneTime}" />
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                                <i:InvokeCommandAction Command="{Binding PopularSelectCommand}" CommandParameter="{Binding ElementName=stateGrid, Path=SelectedItem}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                        <DataGrid.Resources>
                                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Lavender" />
                                            <ContextMenu x:Key="DataRowContextMenu">
                                                <MenuItem Header="Reload Statistics" Command="{Binding DataContext.ChannelMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:ChannelMenuItem.UpdateStatsBatch}" />
                                                <MenuItem Header="Subscribe" Command="{Binding DataContext.ChannelMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:ChannelMenuItem.Subscribe}" />
                                            </ContextMenu>
                                            <DataTemplate x:Key="SimpleTemplate">
                                                <StackPanel Margin="1" d:DataContext="{d:DesignInstance Type=models:IChannel, IsDesignTimeCreatable=False}">
                                                    <StackPanel.OpacityMask>
                                                        <VisualBrush Visual="{Binding ElementName=mask}" />
                                                    </StackPanel.OpacityMask>
                                                    <Image Source="{Binding Thumbnail, IsAsync=True, Mode=OneWay}"
                                                                RenderOptions.BitmapScalingMode="Fant"
                                                                ToolTipService.ShowDuration="120000"
                                                                Stretch="Fill"
                                                                Width="48"
                                                                Height="48"
                                                                VerticalAlignment="Top"
                                                                Margin="0"
                                                                HorizontalAlignment="Center">
                                                        <Image.ToolTip>
                                                            <StackPanel Orientation="Horizontal">
                                                                <Image Source="{Binding Thumbnail, IsAsync=True, Mode=OneWay}" />
                                                                <TextBlock Margin="10,0,0,0" Text="{Binding SubTitle, Mode=OneWay}" TextWrapping="Wrap"/>
                                                            </StackPanel>
                                                        </Image.ToolTip>
                                                    </Image>
                                                </StackPanel>
                                            </DataTemplate>
                                            <DataTemplate x:Key="StateTemplate">
                                                <ComboBox ItemsSource="{Binding SupportedStates, Mode=OneTime}" Margin="0.5" x:Name="stateBox"
                                                          SelectedItem="{Binding SelectedState, Mode=OneWay}"
                                                          >

                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="SelectionChanged">
                                                                <i:InvokeCommandAction Command="{Binding DataContext.SiteChangedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" 
                                                                                       CommandParameter="{Binding ElementName=stateBox, Path=SelectedItem}" 
                                                                                       />
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>

                                                        <ComboBox.Resources>
                                                            <system:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">0</system:Double>
                                                        </ComboBox.Resources>

                                                        <ComboBox.ItemTemplate>
                                                            <DataTemplate>
                                                                <StackPanel Margin="0.5">
                                                                    <StackPanel.OpacityMask>
                                                                        <VisualBrush Visual="{Binding ElementName=mask}" />
                                                                    </StackPanel.OpacityMask>
                                                                    <Image Source="{Binding Thumbnail, IsAsync=True, Mode=OneWay}"
                                                                            RenderOptions.BitmapScalingMode="Fant"
                                                                            ToolTipService.ShowDuration="120000"
                                                                            Stretch="Fill"
                                                                            Width="45"
                                                                            Height="45"
                                                                            VerticalAlignment="Top"
                                                                            Margin="0"
                                                                            HorizontalAlignment="Center" 
                                                                            />
                                                                </StackPanel>
                                                            </DataTemplate>
                                                        </ComboBox.ItemTemplate>
                                                    </ComboBox>
                                            </DataTemplate>
                                        </DataGrid.Resources>

                                        <DataGrid.RowStyle>
                                            <Style TargetType="{x:Type DataGridRow}">
                                                <Setter Property="ContextMenu" Value="{StaticResource DataRowContextMenu}" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ChannelState}" Value="{x:Static enums:ChannelState.Added}">
                                                        <Setter Property="Background" Value="PaleGreen" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DataGrid.RowStyle>

                                        <DataGrid.Columns>
                                        <DataGridTemplateColumn CanUserResize="False">
                                                <DataGridTemplateColumn.CellTemplateSelector>
                                                    <common:RelatedStyleSelector SimpleTemplate="{StaticResource SimpleTemplate}"
                                                                             StateTemplate="{StaticResource StateTemplate}" 
                                                                             />
                                                </DataGridTemplateColumn.CellTemplateSelector>
                                            </DataGridTemplateColumn>

                                        <DataGridTemplateColumn CanUserResize="True" Width="*" d:DataContext="{d:DesignInstance Type=models:IChannel, IsDesignTimeCreatable=False}">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Title, Mode=OneWay}" Margin="10,0,5,0" Foreground="MidnightBlue" FontStretch="Normal" FontSize="22" VerticalAlignment="Center" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>

                                        <DataGridTemplateColumn CanUserResize="False" Width="50" d:DataContext="{d:DesignInstance Type=models:IChannel, IsDesignTimeCreatable=False}">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding ChannelItems.Count, Mode=OneWay}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="21">
                                                        <TextBlock.Style>
                                                            <Style TargetType="TextBlock">
                                                                <Setter Property= "Foreground" Value="MediumSeaGreen" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding ChannelItems.Count}" Value="0">
                                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>

                                    </DataGrid.Columns>

                                    </DataGrid>
                                </DockPanel>
                            </Expander.Content>

                            <Expander.Header>
                                <TextBlock FontSize="10" Text="{Binding RelatedChannels.Count, StringFormat=Related: {0}, Mode=OneWay}" IsEnabled="False"/>
                            </Expander.Header>

                        </Expander>
                    </Border>
                </DockPanel>

                <controls:CustomDataGrid Grid.Row="1" x:Name="channelsGrid"
                          CanUserAddRows="False"
                          CanUserDeleteRows="False"
                          AutoGenerateColumns="False"
                          HeadersVisibility="None"
                          GridLinesVisibility="Horizontal"
                          BorderThickness="1"
                          EnableColumnVirtualization="True"
                          EnableRowVirtualization="True"
                          HorizontalScrollBarVisibility="Disabled"
                          ItemsSource="{Binding Channels}"
                          SelectedItem="{Binding SelectedChannel}"
                          SelectedItemsList="{Binding SelectedChannels, Mode=OneWayToSource}"
                          SelectionUnit="FullRow"
                          SelectionMode="Extended"
                          IsSynchronizedWithCurrentItem="True"
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                          behaviors:SelectingItemAttachedProperty.SelectingItem="{Binding SelectedChannel}"
                          >
                    <DataGrid.InputBindings>
                        <KeyBinding Key="Delete" Command="{Binding ChannelKeyDownCommand, Mode=OneTime}" CommandParameter="{x:Static enums:KeyboardKey.Delete}"/>
                        <KeyBinding Modifiers="Control" Key="Delete" Command="{Binding ChannelKeyDownCommand, Mode=OneTime}" CommandParameter="{x:Static enums:KeyboardKey.Delete}"/>
                    </DataGrid.InputBindings>
                    
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding ChannelGridFocusCommand, Mode=OneTime}" CommandParameter="{Binding ElementName=channelsGrid, Path=SelectedItem}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding ChannelSelectCommand, Mode=OneTime}" CommandParameter="{Binding ElementName=videoGrid}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding ChannelDoubleClickCommand, Mode=OneTime}" CommandParameter="{Binding ElementName=channelsGrid, Path=SelectedItem}"/>
                        </i:EventTrigger>
                        <!--<i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding ChannelSelectCommand, Mode=OneTime}" >
                                <i:InvokeCommandAction.CommandParameter>
                                    <MultiBinding Converter="{StaticResource MultiParamConverter}">
                                        <Binding ElementName="channelsGrid" Path="SelectedItem" />
                                        <Binding ElementName="videoGrid" />
                                    </MultiBinding>
                                </i:InvokeCommandAction.CommandParameter>
                            </i:InvokeCommandAction>
                        </i:EventTrigger>-->
                    </i:Interaction.Triggers>

                    <DataGrid.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Lavender" />
                        <ContextMenu x:Key="DataRowContextMenu">
                            <MenuItem Header="Delete" Command="{Binding DataContext.ChannelMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:ChannelMenuItem.Delete}" />
                            <MenuItem Header="Related" Command="{Binding DataContext.ChannelMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:ChannelMenuItem.Related}" />
                            <MenuItem Header="Edit" Command="{Binding DataContext.ChannelMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:ChannelMenuItem.Edit}" />
                            <MenuItem Header="Tags" Command="{Binding DataContext.ChannelMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:ChannelMenuItem.Tags}" />
                            <MenuItem Header="Update" Command="{Binding DataContext.ChannelMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:ChannelMenuItem.Update}" />
                            <MenuItem Header="Reload Statistics" Command="{Binding DataContext.ChannelMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:ChannelMenuItem.UpdateStatsBatch}" />
                            <!--<MenuItem Header="Statistics" StaysOpenOnClick="True">
                                <MenuItem Header="Update Batch" Command="{Binding DataContext.ChannelMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:ChannelMenuItem.UpdateStatsBatch}" />
                                <MenuItem Header="Update by One" Command="{Binding DataContext.ChannelMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:ChannelMenuItem.UpdateStatsOne}" />
                            </MenuItem>-->
                        </ContextMenu>
                    </DataGrid.Resources> 
                    
                    <DataGrid.RowStyle>
                        <Style TargetType="{x:Type DataGridRow}">
                            <Setter Property="ContextMenu" Value="{StaticResource DataRowContextMenu}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ChannelState}" Value="{x:Static enums:ChannelState.InWork}">
                                    <Setter Property="Background" Value="PaleTurquoise" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ChannelState}" Value="{x:Static enums:ChannelState.HasDownload}">
                                    <Setter Property="Background" Value="PaleGreen" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ChannelState}" Value="{x:Static enums:ChannelState.Added}">
                                    <Setter Property="Background" Value="LightSkyBlue" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>

                    <DataGrid.Columns>
                        <DataGridTemplateColumn CanUserResize="False">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Margin="1" d:DataContext="{d:DesignInstance Type=models:IChannel, IsDesignTimeCreatable=False}">
                                        <StackPanel.OpacityMask>
                                            <VisualBrush Visual="{Binding ElementName=mask}" />
                                        </StackPanel.OpacityMask>
                                        <Image Source="{Binding Thumbnail, IsAsync=True, Mode=OneWay}" 
                                               RenderOptions.BitmapScalingMode="Fant"
                                               ToolTipService.ShowDuration="120000"
                                               Stretch="Fill"
                                               Width="48"
                                               Height="48"
                                               VerticalAlignment="Top"
                                               Margin="0"
                                               HorizontalAlignment="Center"
                                               >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="ToolTipOpening" >
                                                    <i:InvokeCommandAction Command="{Binding DataContext.FillDescriptionCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" 
                                                                           CommandParameter="{Binding}"
                                                                           />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                            
                                            <Image.ToolTip>
                                                <StackPanel Orientation="Horizontal">
                                                    <Image Source="{Binding Thumbnail, IsAsync=True, Mode=OneWay}" />
                                                    <TextBlock Margin="10,0,0,0" Text="{Binding SubTitle, Mode=OneWay}" TextWrapping="Wrap"/>
                                                </StackPanel>
                                            </Image.ToolTip>
                                        </Image>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn CanUserResize="True" Width="*" d:DataContext="{d:DesignInstance Type=models:IChannel, IsDesignTimeCreatable=False}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Title, Mode=OneWay}" Margin="10,0,5,0" Foreground="MidnightBlue" FontStretch="Normal" FontSize="22" VerticalAlignment="Center" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn CanUserResize="False" Width="50" d:DataContext="{d:DesignInstance Type=models:IChannel, IsDesignTimeCreatable=False}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding CountNew, Mode=OneWay}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="21">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property= "Foreground" Value="MediumSeaGreen" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding CountNew}" Value="0">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        
                    </DataGrid.Columns>

                </controls:CustomDataGrid>
                
                <DockPanel Grid.Row="2" Background="Lavender" Margin="0">
                    <Border CornerRadius="4" BorderBrush="Gray" Background="Lavender" BorderThickness="1" DockPanel.Dock="Top">
                        <Expander ExpandDirection="Up" DockPanel.Dock="Left" FlowDirection="RightToLeft" 
                                  IsExpanded="{Binding IsSearchExpanded, Mode=OneWayToSource}" Margin="-0.8,0,0.6,0"
                                  >
                            
                            <Expander.Header>
                                <Grid HorizontalAlignment="{Binding Path=HorizontalAlignment, RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}, Mode=OneWayToSource}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Grid.Column="2" FlowDirection="LeftToRight" 
                                             Width="102" HorizontalAlignment="Left" BorderBrush="Lavender"
                                             Text="{Binding FilterChannelKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             VerticalContentAlignment="Center"
                                             >
                                        <TextBox.Resources>
                                            <VisualBrush x:Key="HelpBrush" TileMode="None" Opacity="0.4" Stretch="None" AlignmentX="Left" AlignmentY="Bottom">
                                                <VisualBrush.Visual>
                                                    <TextBlock FontStyle="Normal" Text="Filter" FontSize="16"/>
                                                </VisualBrush.Visual>
                                                <VisualBrush.Transform>
                                                    <ScaleTransform CenterX="20" CenterY="-5" ScaleX="0.8" ScaleY="0.8"/>
                                                </VisualBrush.Transform>
                                            </VisualBrush>
                                        </TextBox.Resources>
                                        <TextBox.Style>
                                            <Style TargetType="TextBox">
                                                <Style.Triggers>
                                                    <Trigger Property="Text" Value="{x:Null}">
                                                        <Setter Property="Background" Value="{StaticResource HelpBrush}" />
                                                    </Trigger>
                                                    <Trigger Property="Text" Value="">
                                                        <Setter Property="Background" Value="{StaticResource HelpBrush}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                    <Button Grid.Column="2" Width="25" Height="25" FlowDirection="LeftToRight" 
                                        HorizontalAlignment="Left" VerticalAlignment="Center"
                                        HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                        Command="{Binding DataContext.ClearChannelFilterCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                        >
                                        <Button.Template>
                                            <ControlTemplate>
                                                <Border HorizontalAlignment="Center" VerticalAlignment="Center" >
                                                    <Image Source="../Images/cross_16.png" Width="16" Height="16"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>
                                    <Label Grid.Column="0" FontSize="10" Content="Search"/>
                                </Grid>
                            </Expander.Header>
                            
                            <Expander.Content>
                                <DockPanel FlowDirection="LeftToRight" LastChildFill="True">
                                    <DataGrid CanUserAddRows="False" x:Name="popGrid"
                                              CanUserDeleteRows="False"
                                              AutoGenerateColumns="False"
                                              HeadersVisibility="None"
                                              GridLinesVisibility="Horizontal"
                                              BorderThickness="1"
                                              ItemsSource="{Binding ServiceChannels}"
                                              SelectedItem="{Binding SelectedChannel}"
                                              IsSynchronizedWithCurrentItem="True"
                                              >
                                        <DataGrid.InputBindings>
                                            <KeyBinding Key="Enter" Command="{Binding ChannelKeyDownCommand, Mode=OneTime}" CommandParameter="{x:Static enums:KeyboardKey.Enter}"/>
                                        </DataGrid.InputBindings>

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseDoubleClick">
                                                <i:InvokeCommandAction Command="{Binding PopularFillCommand, Mode=OneTime}" />
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                                <i:InvokeCommandAction Command="{Binding PopularSelectCommand}" CommandParameter="{Binding ElementName=popGrid, Path=SelectedItem}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                        <DataGrid.Resources>
                                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Lavender" />
                                        </DataGrid.Resources>

                                        <DataGrid.Columns>
                                            <DataGridTemplateColumn CanUserResize="False" d:DataContext="{d:DesignInstance viewModels:ServiceChannelViewModel, IsDesignTimeCreatable=False}">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <ComboBox ItemsSource="{Binding SupportedSites, Mode=OneWay}" Margin="0.5"
                                                                  SelectedItem="{Binding SelectedSite, Mode=OneWay}"
                                                                  >

                                                            <i:Interaction.Triggers>
                                                                <i:EventTrigger EventName="SelectionChanged">
                                                                    <i:InvokeCommandAction Command="{Binding DataContext.SiteChangedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" 
                                                                                           CommandParameter="{Binding ElementName=popGrid, Path=SelectedItem}" 
                                                                                           />
                                                                </i:EventTrigger>
                                                            </i:Interaction.Triggers>

                                                            <ComboBox.Resources>
                                                                <system:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">0</system:Double>
                                                            </ComboBox.Resources>
                                                            
                                                            <ComboBox.ItemTemplate>
                                                                <DataTemplate>
                                                                    <StackPanel Margin="0.5">
                                                                        <StackPanel.OpacityMask>
                                                                            <VisualBrush Visual="{Binding ElementName=mask}" />
                                                                        </StackPanel.OpacityMask>
                                                                        <Image Source="{Binding Thumbnail, IsAsync=True, Mode=OneWay}"
                                                                               RenderOptions.BitmapScalingMode="Fant"
                                                                               ToolTipService.ShowDuration="120000"
                                                                               Stretch="Fill"
                                                                               Width="45"
                                                                               Height="45"
                                                                               VerticalAlignment="Top"
                                                                               Margin="0"
                                                                               HorizontalAlignment="Center" 
                                                                               />
                                                                    </StackPanel>
                                                                </DataTemplate>
                                                            </ComboBox.ItemTemplate>
                                                            
                                                        </ComboBox>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>

                                            <DataGridTemplateColumn CanUserResize="True" Width="*">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition />
                                                            <ColumnDefinition />
                                                        </Grid.ColumnDefinitions>
                                                            <StackPanel Width="Auto" Orientation="Horizontal">
                                                                <TextBox Width="75" Height="25" Margin="10,0,1,0" behaviors:FocusExtension.IsFocused="{Binding DataContext.IsSearchExpanded, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                                                         VerticalContentAlignment="Bottom" 
                                                                         Text="{Binding DataContext.ServiceChannel.SearchKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
                                                                    <TextBox.Resources>
                                                                        <VisualBrush x:Key="HelpBrush" TileMode="None" Opacity="0.4" Stretch="None" AlignmentX="Left" AlignmentY="Bottom">
                                                                            <VisualBrush.Visual>
                                                                                <TextBlock FontStyle="Normal" Text="#Search" FontSize="13" />
                                                                            </VisualBrush.Visual>
                                                                            <VisualBrush.Transform>
                                                                                <ScaleTransform CenterX="100" ScaleX="0.99" ScaleY="0.89"/>
                                                                            </VisualBrush.Transform>
                                                                        </VisualBrush>
                                                                    </TextBox.Resources>
                                                                    <TextBox.Style>
                                                                        <Style TargetType="TextBox">
                                                                            <Style.Triggers>
                                                                                <Trigger Property="Text" Value="{x:Null}">
                                                                                    <Setter Property="Background" Value="{StaticResource HelpBrush}" />
                                                                                </Trigger>
                                                                                <Trigger Property="Text" Value="">
                                                                                    <Setter Property="Background" Value="{StaticResource HelpBrush}" />
                                                                                </Trigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </TextBox.Style>
                                                                </TextBox>
                                                                <Button Width="25" Height="25" Content="OK" Command="{Binding DataContext.SearchCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                                                            </StackPanel>
                                                            <TextBlock Grid.Column="1" Text="{Binding Title, Mode=OneTime}" Margin="10,0,5,0" Foreground="MidnightBlue" FontStretch="Normal" FontSize="22" VerticalAlignment="Center"/>
                                                        </Grid>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>

                                        <DataGridTemplateColumn CanUserResize="False" Width="60">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <ComboBox FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="MediumSeaGreen" Width="55" Margin="0,0,5,0"
                                                              ItemsSource="{Binding Path=DataContext.ServiceChannel.Countries, Mode=OneTime, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                                              SelectedItem="{Binding Path=DataContext.ServiceChannel.SelectedCountry, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                                              DisplayMemberPath="Key" SelectedValuePath="Value"
                                                              />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>

                                    </DataGrid.Columns>
                                    
                                </DataGrid>
                                </DockPanel>
                            </Expander.Content>
                            
                        </Expander>
                    </Border>
                </DockPanel>

                <DockPanel Grid.Row="3" Background="Gainsboro" IsEnabled="{Binding IsWorking, Mode=OneWay, Converter={StaticResource InvertBooleanConverter}}">
                    <Border CornerRadius="4" BorderBrush="Gray" Background="Lavender" BorderThickness="1" DockPanel.Dock="Top">
                        <DockPanel LastChildFill="True">
                            <Button Width="50" Margin="1,2,2,2" Command="{Binding SyncDataCommand, Mode=OneTime}">
                                <Image Source="../Images/sync-48.png" StretchDirection="Both" />
                                <Button.ToolTip>
                                    <TextBlock Text="Sync" />
                                </Button.ToolTip>
                            </Button>
                            <Button Width="50" Margin="0,2,2,2" Command="{Binding AddNewItemCommand, Mode=OneTime}">
                                <Image Source="../Images/add-48.png" StretchDirection="Both" />
                                <Button.ToolTip>
                                    <TextBlock Text="Add" />
                                </Button.ToolTip>
                            </Button>
                            <ComboBox ItemsSource="{Binding CurrentTags, Mode=OneWay}"
                                      Margin="0,2,2,2" 
                                      VerticalContentAlignment="Center"
                                      SelectedItem="{Binding Path=DataContext.SelectedTag, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                      >
                                
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="DropDownOpened">
                                        <i:InvokeCommandAction Command="{Binding TagsDropDownOpenedCommand, Mode=OneTime}" />
                                    </i:EventTrigger>                                
                                </i:Interaction.Triggers>
                                
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox IsChecked="{Binding IsChecked}" Margin="1"
                                                      >
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Checked">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.CurrentTagCheckedCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}, Mode=OneTime}" />
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="Unchecked">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.CurrentTagCheckedCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}, Mode=OneTime}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                                <CheckBox.LayoutTransform>
                                                    <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                                                </CheckBox.LayoutTransform>
                                                <CheckBox.Style>
                                                    <Style TargetType="CheckBox">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ElementName=tagTextBox, Path=Text}" Value="">
                                                                <Setter Property="Visibility" Value="Hidden"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </CheckBox.Style>
                                            </CheckBox>
                                            <TextBlock Text="{Binding Title}" FontSize="16" Margin="5,0,0,0" x:Name="tagTextBox">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <Trigger Property="Text" Value="">
                                                                <Setter Property="Visibility" Value="Hidden" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </StackPanel>
                                    </DataTemplate>
                             </ComboBox.ItemTemplate>
                            </ComboBox>
                        </DockPanel>
                    </Border>
                </DockPanel>

            </Grid>

            <GridSplitter Grid.Column="1" Grid.RowSpan="2" Width="3" VerticalAlignment="Stretch" HorizontalAlignment="Center" BorderThickness="0.2" BorderBrush="Gray" />

            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <!--<RowDefinition Height="Auto" />-->
                    <RowDefinition MinHeight="25" Height="Auto"/>
                </Grid.RowDefinitions>

                <controls:BusyDecorator IsBusyIndicatorShowing="{Binding IsWorking}">
                    <controls:CustomDataGrid x:Name="videoGrid"
                              CanUserAddRows="False"
                              CanUserDeleteRows="False"
                              AutoGenerateColumns="False"
                              HeadersVisibility="Column"
                              RowHeaderWidth="0"
                              GridLinesVisibility="Horizontal"
                              BorderThickness="1"
                              ItemsSource="{Binding SelectedChannel.ChannelItemsCollectionView, Mode=OneWay}"
                              SelectedItem="{Binding SelectedChannel.SelectedItem}"   
                              SelectedItemsList="{Binding SelectedItems, Mode=OneWayToSource}"
                              HorizontalScrollBarVisibility="Disabled"
                              Sorting="VideoGrid_OnSorting"
                              EnableColumnVirtualization="True"
                              EnableRowVirtualization="True"
                              SelectionMode="Extended"
                              IsSynchronizedWithCurrentItem="True"
                              ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                              >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding VideoDoubleClickCommand, Mode=OneTime}" CommandParameter="{Binding ElementName=videoGrid, Path=SelectedItem}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="Sorting">
                                <i:InvokeCommandAction Command="{Binding VideoDoubleClickCommand, Mode=OneTime}"/>
                            </i:EventTrigger>
                            <behaviors:RoutedEventTrigger RoutedEvent="ScrollViewer.ScrollChanged">
                                <i:InvokeCommandAction Command="{Binding DataContext.ScrollChangedCommand, Mode=OneTime, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" CommandParameter="{Binding ElementName=videoGrid}"/>
                            </behaviors:RoutedEventTrigger>
                        </i:Interaction.Triggers>

                        <DataGrid.Resources>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Lavender" />
                            <ContextMenu x:Key="DataRowContextMenu">
                                <MenuItem Header="Delete" Command="{Binding DataContext.VideoItemMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:VideoMenuItem.Delete}" />
                                <MenuItem Header="Go to Parent" Command="{Binding DataContext.VideoItemMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:VideoMenuItem.Parent}" />
                                <MenuItem Header="Copy Title" Command="{Binding DataContext.VideoItemMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:VideoMenuItem.Title}" />
                                <MenuItem Header="Copy Link" Command="{Binding DataContext.VideoItemMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:VideoMenuItem.Link}" />
                                <MenuItem Header="Open in Folder" Command="{Binding DataContext.VideoItemMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:VideoMenuItem.Folder}" />
                                <MenuItem Header="Edit" Command="{Binding DataContext.OpenDescriptionCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{Binding}"/>
                                <MenuItem Header="Download" StaysOpenOnClick="True">
                                    <MenuItem Header="Download HD" Command="{Binding DataContext.VideoItemMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:VideoMenuItem.HD}" />
                                    <MenuItem Header="Download Audio Only" Command="{Binding DataContext.VideoItemMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:VideoMenuItem.Audio}" />
                                    <MenuItem Header="Download Video Only" Command="{Binding DataContext.VideoItemMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:VideoMenuItem.Video}" />
                                    <MenuItem Header="Download Subs Only" Command="{Binding DataContext.VideoItemMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:VideoMenuItem.Subtitles}" />
                                </MenuItem>
                                <MenuItem Header="Delete from DB" Command="{Binding DataContext.VideoItemMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:VideoMenuItem.DeleteDb}" />
                                <MenuItem Header="Subscribe" Command="{Binding DataContext.VideoItemMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:VideoMenuItem.Subscribe}" />
                                <MenuItem Header="Cancel Download" Command="{Binding DataContext.VideoItemMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:VideoMenuItem.Cancel}" />
                                <MenuItem Header="Subtitles" StaysOpenOnClick="True">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SubmenuOpened">
                                            <i:InvokeCommandAction Command="{Binding DataContext.FillSubitlesCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{Binding}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>

                                    <ListView ItemsSource="{Binding Path=DataContext.SelectedChannel.SelectedItem.Subtitles, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                              BorderThickness="0" Background="WhiteSmoke"
                                              >
                                        <ListView.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <CheckBox IsChecked="{Binding IsChecked}" Margin="0,1,0,0" />
                                                    <TextBlock Text="{Binding Language}" IsEnabled="{Binding IsEnabled}" Margin="10,0,10,0" />
                                                </StackPanel>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                    </ListView>
                                </MenuItem>
                                <MenuItem Header="Proxy" StaysOpenOnClick="True">
                                    <TextBox Text="{Binding Path=DataContext.SelectedChannel.SelectedItem.ProxyUrl, Mode=OneWayToSource, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Width="140" />
                                </MenuItem>
                                <MenuItem Header="Like" Command="{Binding DataContext.VideoItemMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:VideoMenuItem.Like}" />
                            </ContextMenu>
                        </DataGrid.Resources>

                        <DataGrid.RowStyle>
                            <Style TargetType="{x:Type DataGridRow}">
                                <Setter Property="ContextMenu" Value="{StaticResource DataRowContextMenu}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SyncState}" Value="{x:Static enums:SyncState.Added}">
                                        <Setter Property="Background" Value="PaleGreen" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding SyncState}" Value="{x:Static enums:SyncState.Deleted}">
                                        <Setter Property="Background" Value="LightPink" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>

                        <DataGrid.Columns>

                            <DataGridTemplateColumn CanUserResize="False" SortMemberPath="ViewCount">
                                <DataGridTemplateColumn.HeaderStyle>
                                    <Style TargetType="DataGridColumnHeader">
                                        <Setter Property="ToolTip" Value="Most Viewed" />
                                    </Style>
                                </DataGridTemplateColumn.HeaderStyle>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid Margin="1" d:DataContext="{d:DesignInstance Type=models:IVideoItem, IsDesignTimeCreatable=False}">
                                            <Grid.OpacityMask>
                                                <VisualBrush Visual="{Binding ElementName=mask}" />
                                            </Grid.OpacityMask>
                                            <Path Stretch="Fill">
                                                <Path.Style>
                                                    <Style TargetType="Path">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding WatchState}" Value="{x:Static enums:WatchState.Watched}">
                                                                <Setter Property="Visibility" Value="Visible" />
                                                                <Setter Property="Data" Value="F1 M 46.479,0.587 C 45.064,2.731 43.659,4.881 42.233,7.018 C 34.590,18.476 26.954,29.938 19.287,41.380 C 16.541,45.479 16.412,45.484 13.178,42.022 C 9.187,37.750 5.308,33.373 1.255,29.163 C -1.890,25.897 1.704,24.784 3.060,22.970 C 4.534,20.998 6.058,20.783 7.758,22.862 C 9.236,24.668 11.106,26.173 12.457,28.058 C 14.160,30.435 15.412,30.149 17.309,28.225 C 25.700,19.712 34.212,11.316 42.688,2.886 C 43.681,1.898 44.725,0.961 45.746,0.000 C 45.990,0.196 46.235,0.391 46.479,0.587 Z"/>
                                                                <Setter Property="Fill" Value="Green"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding WatchState}" Value="{x:Static enums:WatchState.Planned}">
                                                                <Setter Property="Visibility" Value="Visible" />
                                                                <Setter Property="Data" Value="M10,0 C4.5,0 0,4.5 0,10 C0,15.5 4.5,20 10,20 C15.5,20 20,15.5 20,10 C20,4.5 15.5,0 10,0 L10,0 Z M10,18 C5.6,18 2,14.4 2,10 C2,5.6 5.6,2 10,2 C14.4,2 18,5.6 18,10 C18,14.4 14.4,18 10,18 Z M10.5,5 L9,5 L9,11 L14.2,14.2 L15,12.9 L10.5,10.2 L10.5,5 Z"/>
                                                                <Setter Property="Fill" Value="DarkMagenta"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding WatchState}" Value="{x:Static enums:WatchState.Notset}">
                                                                <Setter Property="Visibility" Value="Hidden" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Path.Style>
                                            </Path>
                                            <Image Source="{Binding Thumbnail, IsAsync=True, Mode=OneWay}"
                                                   ToolTipService.ShowDuration="120000"
                                                   RenderOptions.BitmapScalingMode="Fant"
                                                   Stretch="Fill"
                                                   Width="48"
                                                   Height="48"
                                                   VerticalAlignment="Top"
                                                   Margin="0"
                                                   HorizontalAlignment="Center"
                                                   >
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="MouseLeftButtonUp" >
                                                        <i:InvokeCommandAction Command="{Binding DataContext.OpenDescriptionCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{Binding}" />
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="ToolTipOpening" >
                                                        <i:InvokeCommandAction Command="{Binding DataContext.FillDescriptionCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{Binding}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                                <Image.Style>
                                                    <Style TargetType="Image">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding WatchState}" Value="{x:Static enums:WatchState.Watched}">
                                                                <Setter Property="Opacity" Value="0.65" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding WatchState}" Value="{x:Static enums:WatchState.Planned}">
                                                                <Setter Property="Opacity" Value="0.65" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                                <Image.ToolTip>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="120"/>
                                                            <ColumnDefinition/>
                                                        </Grid.ColumnDefinitions>
                                                        <Image Source="{Binding Thumbnail, IsAsync=True, Mode=OneWay}" VerticalAlignment="Top" Margin="0,4,0,0"/>
                                                        <StackPanel Grid.Column="1" Orientation="Vertical" Margin="10,0,0,0">
                                                            <TextBlock Text="{Binding ParentTitle, Mode=OneWay}" Margin="0,0,0,10"/>
                                                            <TextBlock Text="{Binding Description, Mode=OneWay}" TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Grid> 
                                                </Image.ToolTip>
                                                <Image.InputBindings>
                                                    <MouseBinding Command="{Binding DataContext.ChangeWatchedCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{Binding}" 
                                                                  Gesture="MiddleClick" 
                                                                  />
                                                </Image.InputBindings>
                                            </Image>     
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                           
                            <DataGridTemplateColumn CanUserResize="True" Width="*" Header="Title" SortMemberPath="Title">
                                <DataGridTemplateColumn.HeaderStyle>
                                    <Style TargetType="DataGridColumnHeader">
                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    </Style>
                                </DataGridTemplateColumn.HeaderStyle>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid d:DataContext="{d:DesignInstance Type=models:IVideoItem, IsDesignTimeCreatable=False}">
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <TextBlock Text="{Binding Title}" Margin="10,0,5,0" Foreground="MidnightBlue" FontStretch="Normal" FontSize="22" VerticalAlignment="Center">
                                                <TextBlock.ToolTip>
                                                    <TextBlock Text="{Binding Title}"/>
                                                </TextBlock.ToolTip>
                                            </TextBlock>
                                            <StackPanel Grid.Row="1" Orientation="Horizontal">
                                                <TextBlock Text="{Binding DurationString}" Margin="10,0,0,0" Foreground="MidnightBlue" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="12"/>
                                                <TextBlock Text="{Binding DateTimeAgo}" Margin="10,0,0,0" Foreground="MidnightBlue" HorizontalAlignment="Right" VerticalAlignment="Center" FontSize="12">
                                                    <TextBlock.ToolTip>
                                                        <TextBlock Text="{Binding Timestamp, StringFormat={}{0:dd.MM.yyyy HH:mm}}" Margin="10,0,0,0" Foreground="MidnightBlue" HorizontalAlignment="Right" VerticalAlignment="Center" FontSize="12"/>
                                                    </TextBlock.ToolTip>
                                                </TextBlock>
                                                <TextBlock Text="{Binding ViewCount}" Margin="10,0,0,0" Foreground="MidnightBlue" HorizontalAlignment="Right" VerticalAlignment="Center" FontSize="12" ToolTip="Views"/>
                                                <!--<TextBlock Text="{Binding ViewDiff, StringFormat={}({0})}" Margin="10,0,0,0" Foreground="MidnightBlue" HorizontalAlignment="Right" VerticalAlignment="Center" FontSize="12" ToolTip="New views"/>-->
                                            </StackPanel>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn CanUserResize="False" Width="55" SortMemberPath="LikeCount" IsReadOnly="True">
                                <DataGridTemplateColumn.HeaderStyle>
                                    <Style TargetType="DataGridColumnHeader">
                                        <Setter Property="ToolTip" Value="Statistics" />
                                    </Style>
                                </DataGridTemplateColumn.HeaderStyle>
                                <DataGridTemplateColumn.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <ComboBox Width="45" HorizontalAlignment="Center" ItemsSource="{Binding Path=DataContext.SelectedChannel.Statistics, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" SelectedValue="{Binding Path=DataContext.SelectedChannel.SelectedStat, RelativeSource={RelativeSource AncestorType={x:Type Window}}, Mode=TwoWay}" />
                                    </StackPanel>
                                </DataGridTemplateColumn.Header>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid d:DataContext="{d:DesignInstance Type=models:IVideoItem, IsDesignTimeCreatable=False}">
                                            <StackPanel Orientation="Vertical">
                                                <TextBlock Text="{Binding LikeCount}" Margin="0,0,2,0" Foreground="MidnightBlue" HorizontalAlignment="Right" VerticalAlignment="Center" FontSize="10" ToolTip="{Binding LikeCountText}"/>
                                                <TextBlock Text="{Binding DislikeCount}" Margin="0,0,2,0" Foreground="MidnightBlue" HorizontalAlignment="Right" VerticalAlignment="Center" FontSize="10" ToolTip="{Binding DislikeCountText}"/>
                                                <TextBlock Text="{Binding Comments}" Margin="0,0,2,0" Foreground="MidnightBlue" HorizontalAlignment="Right" VerticalAlignment="Center" FontSize="10" ToolTip="{Binding CommentCountText}"/>
                                                <TextBlock Text="{Binding ViewDiff}" Margin="0,0,2,0" Foreground="MidnightBlue" HorizontalAlignment="Right" VerticalAlignment="Center" FontSize="10" ToolTip="New views"/>
                                            </StackPanel>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn CanUserResize="False" Width="50" SortMemberPath="DislikeCount" IsReadOnly="True">
                                <DataGridTemplateColumn.HeaderStyle>
                                    <Style TargetType="DataGridColumnHeader">
                                        <Setter Property="ToolTip" Value="Local File" />
                                    </Style>
                                </DataGridTemplateColumn.HeaderStyle>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Margin="0,0,2,0"
                                                Command="{Binding DataContext.VideoClickCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                                CommandParameter="{Binding ElementName=videoGrid, Path=SelectedItem}"
                                                >
                                            <Button.Template>
                                                <ControlTemplate>
                                                    <StackPanel Orientation="Vertical" d:DataContext="{d:DesignInstance Type=models:IVideoItem, IsDesignTimeCreatable=False}">
                                                        <Image>
                                                            <Image.Style>
                                                                <Style TargetType="{x:Type Image}">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding FileState}" Value="{x:Static enums:ItemState.LocalNo}">
                                                                            <Setter Property="Source" Value="../Images/add_64.png"/>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding FileState}" Value="{x:Static enums:ItemState.LocalYes}">
                                                                            <Setter Property="Source" Value="../Images/tick_64.png"/>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding FileState}" Value="{x:Static enums:ItemState.Downloading}">
                                                                            <Setter Property="Height" Value="32"/>
                                                                            <Setter Property="Source" Value="../Images/inbox-32.png" />
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding FileState}" Value="{x:Static enums:ItemState.Planned}">
                                                                            <Setter Property="Source" Value="../Images/clock_64.png"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Image.Style>
                                                        </Image>
                                                        <ProgressBar Value="{Binding DownloadPercentage, Mode=OneWay}">
                                                            <ProgressBar.Style>
                                                                <Style TargetType="{x:Type ProgressBar}">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding FileState}" Value="{x:Static enums:ItemState.LocalNo}">
                                                                            <Setter Property="Height" Value="0"/>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding FileState}" Value="{x:Static enums:ItemState.LocalYes}">
                                                                            <Setter Property="Height" Value="0"/>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding FileState}" Value="{x:Static enums:ItemState.Downloading}">
                                                                            <Setter Property="Height" Value="16"/>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding FileState}" Value="{x:Static enums:ItemState.Planned}">
                                                                            <Setter Property="Height" Value="0"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </ProgressBar.Style>
                                                        </ProgressBar>
                                                    </StackPanel>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                        </DataGrid.Columns>
                        
                    </controls:CustomDataGrid>
                </controls:BusyDecorator>          

                <Border Grid.Row="1" CornerRadius="4" BorderBrush="Gray" BorderThickness="1" Background="Lavender" DockPanel.Dock="Top" Margin="0,1,0,0">
                    
                    <Expander ExpandDirection="Up" 
                              FlowDirection="RightToLeft" 
                              Background="Lavender" 
                              BorderThickness="1"
                              IsExpanded="{Binding IsLogExpand, Mode=TwoWay}"
                              >
                        <Expander.Content>
                            <Grid FlowDirection="LeftToRight">
                                <ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Visible" Height="150" >
                                    <TextBox Text="{Binding SelectedChannel.SelectedItem.LogText, Mode=OneWay}" 
                                             TextWrapping="Wrap" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                             />
                                </ScrollViewer>
                            </Grid>
                        </Expander.Content>
                    
                        <Expander.Header>
                            <Grid HorizontalAlignment="{Binding Path=HorizontalAlignment, RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}, Mode=OneWayToSource}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Grid.Column="3" FlowDirection="LeftToRight" 
                                             Width="160" HorizontalAlignment="Left" BorderBrush="Lavender"
                                             Text="{Binding SelectedChannel.FilterVideoKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             VerticalContentAlignment="Center"
                                             >
                                    <TextBox.Resources>
                                        <VisualBrush x:Key="HelpBrush" TileMode="None" Opacity="0.4" Stretch="None" AlignmentX="Left" AlignmentY="Bottom">
                                            <VisualBrush.Visual>
                                                <TextBlock FontStyle="Normal" Text="Filter" FontSize="16"/>
                                            </VisualBrush.Visual>
                                            <VisualBrush.Transform>
                                                <ScaleTransform CenterX="20" CenterY="-5" ScaleX="0.8" ScaleY="0.8"/>
                                            </VisualBrush.Transform>
                                        </VisualBrush>
                                    </TextBox.Resources>
                                    <TextBox.Style>
                                        <Style TargetType="TextBox">
                                            <Style.Triggers>
                                                <Trigger Property="Text" Value="{x:Null}">
                                                    <Setter Property="Background" Value="{StaticResource HelpBrush}" />
                                                </Trigger>
                                                <Trigger Property="Text" Value="">
                                                    <Setter Property="Background" Value="{StaticResource HelpBrush}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                                <Button Grid.Column="3" Width="25" Height="25" FlowDirection="LeftToRight" 
                                        HorizontalAlignment="Left" VerticalAlignment="Center"
                                        HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                        Command="{Binding DataContext.ClearFilterCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                        >
                                    <Button.Template>
                                        <ControlTemplate>
                                            <Border HorizontalAlignment="Center" VerticalAlignment="Center" >
                                                <Image Source="../Images/cross_16.png" Width="16" Height="16"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                                <ComboBox Grid.Column="2" Visibility="{Binding SettingsViewModel.IsVideoFiltrationEnabled, Converter={StaticResource BoolToVisibilityConverter}}"
                                          Width="100" FlowDirection="LeftToRight"  HorizontalAlignment="Right" Margin="2,0,2,0"
                                          ItemsSource="{Binding SelectedChannel.VideoTags, Mode=OneWay}"
                                          SelectedItem="{Binding Path=DataContext.SelectedVideoTag, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                      >

                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="DropDownOpened">
                                            <i:InvokeCommandAction Command="{Binding VideoTagsDropDownOpenedCommand, Mode=OneTime}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>

                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <CheckBox IsChecked="{Binding IsChecked}" Margin="1"
                                                      >
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="Checked">
                                                            <i:InvokeCommandAction Command="{Binding Path=DataContext.VideoTagCheckedCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}, Mode=OneTime}" />
                                                        </i:EventTrigger>
                                                        <i:EventTrigger EventName="Unchecked">
                                                            <i:InvokeCommandAction Command="{Binding Path=DataContext.VideoTagCheckedCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}, Mode=OneTime}"/>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                    <CheckBox.LayoutTransform>
                                                        <ScaleTransform ScaleX="1.4" ScaleY="1.4" />
                                                    </CheckBox.LayoutTransform>
                                                    <CheckBox.Style>
                                                        <Style TargetType="CheckBox">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ElementName=tagTextBox, Path=Text}" Value="">
                                                                    <Setter Property="Visibility" Value="Hidden"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </CheckBox.Style>
                                                </CheckBox>
                                                <TextBlock Text="{Binding Title}" FontSize="16" Margin="5,0,0,0" x:Name="tagTextBox">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Style.Triggers>
                                                                <Trigger Property="Text" Value="">
                                                                    <Setter Property="Visibility" Value="Hidden" />
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <Label Grid.Column="1" FontSize="12" Content="{Binding SelectedChannel.ChannelStatistics, Mode=OneWay}"/>
                                <Label Grid.Column="0" FontSize="10" Content="Log"/>
                            </Grid>
                    </Expander.Header>
                    </Expander>
                    
                </Border>
                
            </Grid>

            <Expander Grid.Column="3" IsExpanded="{Binding IsPlExpand, Mode=TwoWay}"
                      ExpandDirection="Left" 
                      HorizontalAlignment="Stretch" 
                      Background="Lavender"
                      BorderThickness="1" 
                      BorderBrush="Gray" 
                      Margin="0,0,2,0"
                      >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Expanded">
                        <i:InvokeCommandAction Command="{Binding PlaylistExpandCommand, Mode=OneTime}" CommandParameter="{Binding ElementName=channelsGrid, Path=SelectedItem}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                
                <Expander.Content>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="400"/>
                        </Grid.ColumnDefinitions>

                        <GridSplitter Width="3" ResizeDirection="Columns" />

                        <DataGrid Grid.Column="1" x:Name="plGrid"
                                  CanUserAddRows="False"
                                  CanUserDeleteRows="False"
                                  AutoGenerateColumns="False"
                                  ItemsSource="{Binding SelectedChannel.ChannelPlaylists}"
                                  HeadersVisibility="None"
                                  GridLinesVisibility="Horizontal"
                                  BorderThickness="1"
                                  SelectedItem="{Binding SelectedPlaylist}"
                                  EnableColumnVirtualization="True"
                                  EnableRowVirtualization="True"
                                  HorizontalScrollBarVisibility="Disabled"
                                  SelectionUnit="FullRow"
                                  SelectionMode="Extended"
                                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                  HorizontalAlignment="Stretch"
                                  >

                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged" SourceName="plGrid">
                                    <i:InvokeCommandAction Command="{Binding PlaylistSelectCommand, Mode=OneTime}" CommandParameter="{Binding ElementName=plGrid, Path=SelectedItem}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="MouseDoubleClick">
                                    <i:InvokeCommandAction Command="{Binding PlaylistMenuCommand, Mode=OneTime}" CommandParameter="{x:Static enums:PlaylistMenuItem.Update}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                            <DataGrid.Resources>
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Lavender" />
                                <ContextMenu x:Key="DataRowContextMenu">
                                    <MenuItem Header="Copy Link" Command="{Binding DataContext.PlaylistMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:PlaylistMenuItem.Link}" />
                                    <MenuItem Header="Download" Command="{Binding DataContext.PlaylistMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:PlaylistMenuItem.Download}" />
                                    <MenuItem Header="Download HD" Command="{Binding DataContext.PlaylistMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:PlaylistMenuItem.DownloadHd}" />
                                    <MenuItem Header="Download with Subs" Command="{Binding DataContext.PlaylistMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:PlaylistMenuItem.DownloadSubs}" />
                                    <MenuItem Header="Download Audio Only" Command="{Binding DataContext.PlaylistMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:PlaylistMenuItem.Audio}" />
                                    <MenuItem Header="Download Video Only" Command="{Binding DataContext.PlaylistMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:PlaylistMenuItem.Video}" />
                                    <MenuItem Header="Update Playlist" Command="{Binding DataContext.PlaylistMenuCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{x:Static enums:PlaylistMenuItem.Update}" />
                                </ContextMenu>
                            </DataGrid.Resources>
                            
                            <DataGrid.RowStyle>
                                <Style TargetType="{x:Type DataGridRow}">
                                    <Setter Property="ContextMenu" Value="{StaticResource DataRowContextMenu}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding State}" Value="{x:Static enums:SyncState.Added}">
                                            <Setter Property="Background" Value="PaleGreen" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>

                            <DataGrid.Columns>
                                
                                <DataGridTemplateColumn CanUserResize="False">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Margin="1" d:DataContext="{d:DesignInstance Type=models:IPlaylist, IsDesignTimeCreatable=False}">
                                                <StackPanel.OpacityMask>
                                                    <VisualBrush Visual="{Binding ElementName=mask}" />
                                                </StackPanel.OpacityMask>
                                                <Image Source="{Binding Thumbnail, IsAsync=True, Mode=OneWay}"
                                                        RenderOptions.BitmapScalingMode="Fant"
                                                        ToolTipService.ShowDuration="120000"
                                                        Stretch="Fill"
                                                        Width="48"
                                                        Height="48"
                                                        VerticalAlignment="Top"
                                                        Margin="0"
                                                        HorizontalAlignment="Center">
                                                    <Image.ToolTip>
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="{Binding Thumbnail, IsAsync=True, Mode=OneWay}" />
                                                            <TextBlock Margin="10,0,0,0" Text="{Binding SubTitle, Mode=OneWay}" />
                                                        </StackPanel>
                                                    </Image.ToolTip>
                                                </Image>
                                            </StackPanel>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Width="*" d:DataContext="{d:DesignInstance Type=models:IPlaylist, IsDesignTimeCreatable=False}">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Title}" Margin="10,0,5,0" 
                                                       Width="Auto" Foreground="MidnightBlue"
                                                       FontStretch="Normal" FontSize="22" 
                                                       VerticalAlignment="Center" HorizontalAlignment="Stretch"
                                                       />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn CanUserResize="False" Width="40" d:DataContext="{d:DesignInstance Type=models:IPlaylist, IsDesignTimeCreatable=False}">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding PlItems.Count, Mode=OneWay}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="18">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="Foreground" Value="MidnightBlue" />
                                                        <Setter Property="FontStyle" Value="Italic"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding PlItems.Count}" Value="0">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                            </DataGrid.Columns>
                            
                        </DataGrid>
                        
                    </Grid>
                </Expander.Content>
                <Expander.Header>
                    <Grid VerticalAlignment="{Binding Path=VerticalAlignment, RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}, Mode=OneWayToSource}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        
                        <StackPanel Orientation="Vertical" DockPanel.Dock="Top">
                            <TextBlock Text="P" HorizontalAlignment="Center"/>
                            <TextBlock Text="L" HorizontalAlignment="Center"/>
                            <TextBlock Text="A" HorizontalAlignment="Center"/>
                            <TextBlock Text="Y" HorizontalAlignment="Center"/>
                            <TextBlock Text="L" HorizontalAlignment="Center"/>
                            <TextBlock Text="I" HorizontalAlignment="Center"/>
                            <TextBlock Text="S" HorizontalAlignment="Center"/>
                            <TextBlock Text="T" HorizontalAlignment="Center"/>
                            <TextBlock Text="S" HorizontalAlignment="Center"/>
                            <TextBlock Text=". ." HorizontalAlignment="Center"/>
                            <TextBlock Text="{Binding SelectedChannel.PlaylistCount, Mode=OneWay}" HorizontalAlignment="Center"/>
                        </StackPanel>

                        <CheckBox Grid.Row="2" HorizontalAlignment="Center" Margin="1,0,0,2" ToolTip="Show/Hide Added/Deleted" 
                                  IsChecked="{Binding SelectedChannel.IsShowSynced, Mode=TwoWay}" IsThreeState="False" 
                                  />
                    </Grid>
                    
                </Expander.Header>
            </Expander>
            
        </Grid>

        <StatusBar Grid.Row="2">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="102" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="40" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="100" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem HorizontalContentAlignment="Center">
                <TextBlock Text="{Binding Result, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
            </StatusBarItem>
            <Separator Grid.Column="1" />
            <StatusBarItem Grid.Column="2">
                <TextBlock Text="{Binding Info, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
            </StatusBarItem>
            <!--<Separator Grid.Column="3" />-->
            <StatusBarItem Grid.Column="4" Content="{Binding SelectedChannel.ChannelItemsCount, Mode=OneWay}" HorizontalContentAlignment="Right" />
            <Separator Grid.Column="5" />
            <StatusBarItem Grid.Column="6">
                <ProgressBar Width="90" Height="16" Value="{Binding PrValue, Mode=OneWay}"/>
            </StatusBarItem>
        </StatusBar>
        
    </Grid>

</Window>